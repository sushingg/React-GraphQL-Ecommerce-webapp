{"version":3,"sources":["components/Products/Products.js"],"names":["Product","React","lazy","Promise","resolve","then","__webpack_require__","bind","Products","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","textAlign","Column","largeScreen","mobile","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","Group","itemsPerRow","stackable","react_apollo__WEBPACK_IMPORTED_MODULE_2__","query","gql","_templateObject","pollInterval","_ref","loading","error","data","Fragment","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","Image","square","Content","Header","Line","length","Paragraph","extra","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","disabled","primary","semantic_ui_react__WEBPACK_IMPORTED_MODULE_8__","message","products","product","map","currentProduct","i","key"],"mappings":"wpBAIA,IAAMA,EAAUC,IAAMC,KAAK,kBAAMC,QAAAC,UAAAC,KAAAC,EAAAC,KAAA,aA8FlBC,UA5FE,kBACfC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,UACdJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,OAAN,CAAaC,YAAa,GAAIC,OAAQ,IACpCP,EAAAC,EAAAC,cAACM,EAAA,EAAKC,MAAN,CAAYC,YAAa,EAAGC,WAAS,GACnCX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEC,MAAOC,IAAFC,KAkBLC,aAAc,KAEb,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OAAIF,EAEAlB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACoB,EAAA,EAAYC,MAAb,CAAmBC,QAAM,KAE3BxB,EAAAC,EAAAC,cAACM,EAAA,EAAKiB,QAAN,KACEzB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACoB,EAAA,EAAYI,OAAb,KACE1B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,eACzB5B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,YAE3B5B,EAAAC,EAAAC,cAACoB,EAAA,EAAYO,UAAb,KACE7B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,aAK/B5B,EAAAC,EAAAC,cAACM,EAAA,EAAKiB,QAAN,CAAcK,OAAK,GACjB9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAQ,EAACC,SAAO,GAAxB,iBAMJjC,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACoB,EAAA,EAAYC,MAAb,CAAmBC,QAAM,KAE3BxB,EAAAC,EAAAC,cAACM,EAAA,EAAKiB,QAAN,KACEzB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACoB,EAAA,EAAYI,OAAb,KACE1B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,eACzB5B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,YAE3B5B,EAAAC,EAAAC,cAACoB,EAAA,EAAYO,UAAb,KACE7B,EAAAC,EAAAC,cAACoB,EAAA,EAAYK,KAAb,CAAkBC,OAAO,aAK/B5B,EAAAC,EAAAC,cAACM,EAAA,EAAKiB,QAAN,CAAcK,OAAK,GACjB9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAQ,EAACC,SAAO,GAAxB,kBAONd,EAEAnB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACgC,EAAA,EAAQR,OAAT,cACA1B,EAAAC,EAAAC,cAAA,SAAIiB,EAAMgB,UAGTf,EAAKgB,SAASC,QAAQC,IAAI,SAACC,EAAgBC,GAAjB,OAC/BxC,EAAAC,EAAAC,cAACX,EAAD,CAASkD,IAAKD,EAAGH,QAASE","file":"static/js/4.0cd0fd9b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Card, Message, Grid, Placeholder, Button } from \"semantic-ui-react\";\r\nconst Product = React.lazy(() => import(\"./Product\"));\r\n\r\nconst Products = () => (\r\n  <Grid textAlign=\"center\">\r\n    <Grid.Column largeScreen={16} mobile={13}>\r\n      <Card.Group itemsPerRow={4} stackable>\r\n        <Query\r\n          query={gql`\r\n            {\r\n              products(limit: 12) {\r\n                product {\r\n                  id\r\n                  slug\r\n                  title\r\n                  price\r\n                  description\r\n                  quantity\r\n                  image {\r\n                    altText\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          `}\r\n          pollInterval={20000}\r\n        >\r\n          {({ loading, error, data }) => {\r\n            if (loading)\r\n              return (\r\n                <>\r\n                  <Card>\r\n                    <Placeholder>\r\n                      <Placeholder.Image square />\r\n                    </Placeholder>\r\n                    <Card.Content>\r\n                      <Placeholder>\r\n                        <Placeholder.Header>\r\n                          <Placeholder.Line length=\"very short\" />\r\n                          <Placeholder.Line length=\"medium\" />\r\n                        </Placeholder.Header>\r\n                        <Placeholder.Paragraph>\r\n                          <Placeholder.Line length=\"short\" />\r\n                        </Placeholder.Paragraph>\r\n                      </Placeholder>\r\n                    </Card.Content>\r\n\r\n                    <Card.Content extra>\r\n                      <Button disabled primary>\r\n                        Add to cart\r\n                      </Button>\r\n                    </Card.Content>\r\n                  </Card>\r\n                  \r\n                  <Card>\r\n                    <Placeholder>\r\n                      <Placeholder.Image square />\r\n                    </Placeholder>\r\n                    <Card.Content>\r\n                      <Placeholder>\r\n                        <Placeholder.Header>\r\n                          <Placeholder.Line length=\"very short\" />\r\n                          <Placeholder.Line length=\"medium\" />\r\n                        </Placeholder.Header>\r\n                        <Placeholder.Paragraph>\r\n                          <Placeholder.Line length=\"short\" />\r\n                        </Placeholder.Paragraph>\r\n                      </Placeholder>\r\n                    </Card.Content>\r\n\r\n                    <Card.Content extra>\r\n                      <Button disabled primary>\r\n                        Add to cart\r\n                      </Button>\r\n                    </Card.Content>\r\n                  </Card>\r\n                </>\r\n              );\r\n            if (error)\r\n              return (\r\n                <Message>\r\n                  <Message.Header>Error</Message.Header>\r\n                  <p>{error.message}</p>\r\n                </Message>\r\n              );\r\n            return data.products.product.map((currentProduct, i) => (\r\n              <Product key={i} product={currentProduct} />\r\n            ));\r\n          }}\r\n        </Query>\r\n      </Card.Group>\r\n    </Grid.Column>\r\n  </Grid>\r\n);\r\nexport default Products;\r\n"],"sourceRoot":""}